{"version":3,"sources":["components/Panel.js","components/Table.js","components/Board/BoardHook.js","components/Board/Board.js","components/Timer.js","components/ResultModal.js","components/SetGame.js","App.js","serviceWorker.js","index.js"],"names":["Panel","props","low","col","setMark","showContent","onClick","e","preventDefault","onContextMenu","Table","HEIGHT","WIDTH","trIdx","i","tdIdx","trs","map","key","className","constructArray","fill","ary","push","j","useMark","MINE_PERCENT","useState","under","setUnder","mark","setMarking","initValue","score","setScore","value","useScore","upScore","mineCount","setMineCount","useEffect","mined","nearMineNum","Math","random","initialUnder","newUnder","newMineCount","event","length","copy","idx","slice","count","recursiveCall","setTimeout","alert","window","location","reload","content","Board","modalOpen","role","aria-label","Timer","prop","milisecond","time","setTime","timerID","useRef","current","setInterval","c","clearInterval","useTimer","clearTimer","Modal","setAppElement","ResultModal","modalIsOpen","setModalOpen","isOpen","onRequestClose","SetGame","setHEIGHT","setWIDTH","setMINE_PERCENT","type","placeholder","onChange","target","max","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f644342e.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Panel (props) {\n    const { low, col, setMark, showContent } = props;\n\n    const clickHandler = (e) => {\n        e.preventDefault();\n        setMark(low, col, \"clicked\");\n    }\n\n    const contextmenuHandler = (e) => {\n        e.preventDefault();\n        setMark(low, col, \"contextMenued\");\n    }\n\n    return  <>\n                <td onClick={clickHandler} onContextMenu={contextmenuHandler}>\n                    {showContent(low, col)}\n                </td>\n            </>;\n}\n\nexport default Panel;","import React from \"react\";\nimport Panel from \"./Panel\";\n\nfunction Table(props) {\n    const { setMark, showContent, HEIGHT, WIDTH } = props;\n\n    const trIdx = [];\n    for (let i = 0; i < HEIGHT; i++) {\n        trIdx[i] = i;\n    }\n\n    const tdIdx = [];\n    for (let i = 0; i < WIDTH; i++) {\n        tdIdx[i] = i;\n    }\n    \n    const trs = trIdx.map((low) => \n        <tr key={low}>\n            {tdIdx.map((col) => \n                <Panel className=\"Panel\" key={col} low={low} col={col} showContent={showContent} setMark={setMark} />       \n            )}\n        </tr>);\n\n    return (\n        <>\n            <table>\n                <tbody>\n                    {trs}\n                </tbody>\n            </table>\n        </>);\n}\n\nexport default Table;","import React, { useState, useEffect } from \"react\";\n\nconst constructArray = (HEIGHT, WIDTH, fill) => {\n    const ary = [];\n    for (let i = 0 ; i < HEIGHT; i++) {\n        ary.push([]);\n        for (let j = 0 ; j < WIDTH; j++) {\n            ary[i].push(fill);\n        }\n    }\n    return ary;\n}\n\nconst useScore = (initValue) => {\n    const [score, setScore] = useState(initValue);\n    const upScore = (value) => {\n        setScore(score + value);\n    }\n    return [score, upScore, setScore];\n}\n\nconst initialUnder = (HEIGHT, WIDTH, MINE_PERCENT) => {\n    // const mined = Array.from(Array(HEIGHT), () => Array(WIDTH).fill(false));\n    // const nearMineNum = Array.from(Array(HEIGHT), () => Array(WIDTH).fill(0));\n    const mined = [];\n    const nearMineNum = [];\n    for (let i = 0 ; i < HEIGHT; i++) {\n        mined.push([]);\n        nearMineNum.push([]);\n        for (let j = 0 ; j < WIDTH; j++) {\n            mined[i].push(false);\n            nearMineNum[i].push(0);\n        }\n    }\n\n    let mineCount = 0;\n    for (let i = 0 ; i < HEIGHT; i++) {\n        for (let j = 0 ; j < WIDTH ; j++) {\n            mined[i][j] = Math.random() < MINE_PERCENT;\n            if (mined[i][j]) {\n                mineCount++;\n                // 상\n                if (i > 0)\n                    nearMineNum[i-1][j]++;\n                // 하\n                if (i < HEIGHT - 1)\n                    nearMineNum[i+1][j]++;\n                // 좌\n                if (j > 0)\n                    nearMineNum[i][j-1]++;\n                // 우\n                if (j < WIDTH - 1)\n                    nearMineNum[i][j+1]++;\n                // 북서\n                if (i > 0 && j > 0)\n                    nearMineNum[i-1][j-1]++;\n                // 북동\n                if (i > 0 && j < WIDTH - 1)\n                    nearMineNum[i-1][j+1]++;\n                // 남서\n                if (i < HEIGHT - 1 && j > 0)\n                    nearMineNum[i+1][j-1]++;\n                // 남동\n                if (i < HEIGHT - 1 && j < WIDTH - 1)\n                    nearMineNum[i+1][j+1]++;\n            }\n        }\n    }\n\n    for (let i = 0 ; i < HEIGHT; i++) {\n        for (let j = 0 ; j < WIDTH; j++) {\n            if (mined[i][j])\n                nearMineNum[i][j] = \"💣\";\n        }\n    }\n\n    return [nearMineNum, mineCount];\n}\n\nconst useMark = (HEIGHT, WIDTH, MINE_PERCENT) => {\n    const [ under, setUnder ] = useState(constructArray(HEIGHT, WIDTH, 0));\n    const [ mark, setMarking ] = useState(constructArray(HEIGHT, WIDTH, \"notting\"));\n    const [ score, upScore, setScore ] = useScore(0);\n    const [ mineCount, setMineCount ] = useState(0);\n    useEffect(() => {\n        const [ newUnder, newMineCount ] = initialUnder(HEIGHT, WIDTH, MINE_PERCENT);\n        setMineCount(newMineCount);\n        setUnder(newUnder);\n        setMarking(constructArray(HEIGHT, WIDTH, \"notting\"));\n        setScore(0);\n    }, [HEIGHT, WIDTH, MINE_PERCENT, setScore ])\n\n\n    const setMark = (low, col, event) => {      \n        const ary = [];\n        for (let i = 0 ; i < mark.length; i++) {\n            ary.push(i);\n        }\n        const copy = ary.map((idx) => mark[idx].slice(0));\n        \n\n        if (event === \"clicked\") {\n            let count = 0;\n            switch(mark[low][col]) {\n                case \"notting\":\n                    const recursiveCall = (low, col) => {\n                        if (under[low][col] === 0 && copy[low][col] === \"notting\") {\n                            copy[low][col] = \"clicked\";\n                            count++;\n                            if (low > 0) {\n                                if (col > 0) {\n                                    recursiveCall(low-1,col-1,copy);\n                                }\n                                if (col < WIDTH - 1) {\n                                    recursiveCall(low-1,col+1,copy);\n                                }\n                                recursiveCall(low-1, col,copy);\n                                \n                            }\n                            if (low < HEIGHT - 1) {\n                                if (col > 0) {\n                                    recursiveCall(low+1,col-1,copy);\n                                \n                                }\n                                if (col < WIDTH - 1) {\n                                    recursiveCall(low+1,col+1,copy);\n                                }\n                                recursiveCall(low+1, col,copy);   \n                            }\n                            if (col > 0) {\n                                recursiveCall(low,col-1,copy);\n                            }\n                            if (col < WIDTH - 1) {\n                                recursiveCall(low,col+1,copy);\n                            }\n                        }\n                        else if (under[low][col] !== 0 && copy[low][col] !== \"clicked\") {\n                            copy[low][col] = \"clicked\";\n                            count++;\n                        }\n                    }\n                    recursiveCall(low,col);\n                    if (under[low][col] === \"💣\")\n                        setTimeout(() => {\n                            alert(\"실패입니다. 게임을 재시작합니다.\");\n                            window.location.reload();\n                        }, 10);\n                    else {\n                        upScore(count);\n                    }\n                    break;\n                case \"clicked\":\n                    // do notting\n                    break;\n                case \"contextMenued\":\n                    // do notting\n                    break;\n                default:\n                    break;\n            }\n        }\n        else if (event === \"contextMenued\") {\n            switch(mark[low][col]) {\n                case \"notting\":\n                    copy[low][col] = \"contextMenued\";\n                    if (under[low][col] === \"💣\")\n                        upScore(1);\n                    break;\n                case \"clicked\":\n                    // do notting\n                    break;\n                case \"contextMenued\":\n                    copy[low][col] = \"notting\";\n                    if (under[low][col] === \"💣\")\n                        upScore(-1);\n                    break;\n                default:\n                    break;\n            }         \n        }\n        setMarking(copy);\n        return;\n    };\n\n    const showContent = (low, col) => {\n        let content;\n        try {\n            switch(mark[low][col]) {\n                case \"notting\":\n                    content=<div className={'NotClick'}></div>;\n                    break;\n                case \"clicked\":\n                    content=under[low][col];\n                    if (content === 0)\n                        content = <div className={'Zero'}></div>;\n                    break;\n                case \"contextMenued\":\n                    content=\"🚩\";\n                    break;\n                default:\n                    break;\n            }\n        }\n        catch {\n            content = \"notting\";\n        }\n        return content;\n    }\n    return [ score, mineCount, setMark, showContent ];\n}\n\nexport { useScore, useMark };","import React, { useEffect } from \"react\";\nimport Table from \"../Table\";\nimport { useMark } from \"./BoardHook\";\n\nfunction Board (props) {\n    const { HEIGHT, WIDTH, MINE_PERCENT, modalOpen } = props;\n    const [ score, mineCount, setMark, showContent ] = useMark(HEIGHT, WIDTH, MINE_PERCENT);\n    useEffect(() => {\n        if (HEIGHT * WIDTH === score) {\n            if (score !== 0)\n                modalOpen();\n        }\n    }, [score, HEIGHT, WIDTH, modalOpen]);\n\n    return (\n        <>\n            <div className={'Board'}>\n                <h1><span role=\"img\" aria-label=\"boom\">💣</span> : {mineCount}</h1>\n                <Table setMark={setMark} showContent={showContent} HEIGHT={HEIGHT} WIDTH={WIDTH}/>\n            </div>\n        </>\n    );\n}\n\nexport default Board;","import React, { useRef, useEffect, useState, Fragment } from \"react\";\n\n// useTimer \nconst useTimer = (milisecond) => {\n    const [time, setTime] = useState(0);\n    const timerID = useRef(0);\n    useEffect(() => {\n        timerID.current = setInterval(() => {\n            setTime(c => c+1);\n        }, milisecond);\n        return () => {\n            clearInterval(timerID.current);\n        }\n    }, [milisecond]);\n    const clearTimer = () => {\n        clearInterval(timerID.current);\n    }\n    return [ time, clearTimer ];\n}\n\n\nfunction Timer (prop) {\n    const [ time, clearTimer ] = useTimer(1000);\n    prop.time.current = time;\n    prop.clearTimer.current = clearTimer;\n    return (\n        <Fragment >    \n            <h1 className={'Timer'}> Time : {time} </h1>\n        </Fragment>\n    );\n}\n\nexport default Timer;","import React from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement('#root');\n\nfunction ResultModal(props) {\n    const { time, modalIsOpen, setModalOpen} = props;\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    return (\n        <Modal className={'Modal'} isOpen={modalIsOpen}\n               onRequestClose={closeModal}>\n            <p> 축하합니다. {time}초 걸렸습니다. </p>\n            <button onClick={() => window.location.reload()}>재시작</button>\n        </Modal>\n    );\n}\n\nexport default ResultModal;","import React from \"react\";\n\nfunction SetGame (props) {\n    const { setHEIGHT, setWIDTH, setMINE_PERCENT } = props;\n    const HEIGHTChange = (e) => {\n        setHEIGHT(e.target.value);\n    }\n    const WIDTHChange = (e) => {\n        setWIDTH(e.target.value);\n    }\n    const MINE_PERCENTChange = (e) => {\n        setMINE_PERCENT(e.target.value);\n    }\n    return (\n    <div className={'SetGame'}>\n        <label>세로<input type=\"number\" placeholder=\"10\" onChange={HEIGHTChange} max=\"15\"></input></label>\n        <label>가로<input type=\"number\" placeholder=\"10\" onChange={WIDTHChange} max=\"15\"></input></label>\n        <label>지뢰 발생률<input type=\"number\" placeholder=\"0.1\" onChange={MINE_PERCENTChange} max=\"1\"></input></label>\n    </div>);    \n}\n\nexport default SetGame;","import React, { useRef, useState } from 'react';\nimport Board from './components/Board/Board';\nimport Timer from \"./components/Timer\";\nimport ResultModal from './components/ResultModal';\nimport SetGame from \"./components/SetGame\";\n\nfunction App() {\n  // get time.\n  const time = useRef(null);\n  const clearTimer = useRef(null);\n\n  // 초기 setting\n  const [ HEIGHT, setHEIGHT ] =useState(10);\n  const [ WIDTH, setWIDTH ] = useState(10);\n  const [ MINE_PERCENT, setMINE_PERCENT ] = useState(0.1);\n\n  // modal logic.\n  const [modalIsOpen, setModalOpen] = useState(false);\n  const modalOpen = () => {\n    setModalOpen(true);\n    clearTimer.current();\n  }\n\n  return (\n    <div className=\"App\">\n      <Timer time={time} clearTimer={clearTimer}/>\n      <Board modalOpen={modalOpen} HEIGHT={HEIGHT} WIDTH={WIDTH} MINE_PERCENT={MINE_PERCENT} />\n      <SetGame setHEIGHT={setHEIGHT} setWIDTH={setWIDTH} setMINE_PERCENT={setMINE_PERCENT} />\n      <ResultModal time={time.current} modalIsOpen={modalIsOpen} setModalOpen={setModalOpen} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}