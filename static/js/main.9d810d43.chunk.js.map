{"version":3,"sources":["components/Panel.js","components/Table.js","components/Board/BoardHook.js","components/Board/Board.js","components/Timer.js","components/ResultModal.js","components/SetGame.js","App.js","serviceWorker.js","index.js"],"names":["Panel","props","low","col","under","setMark","mark","onClick","e","preventDefault","onContextMenu","content","className","showContent","Table","HEIGHT","WIDTH","trIdx","i","tdIdx","trs","map","key","useMark","MINE_PERCENT","useState","Array","fill","setMarking","initValue","score","setScore","value","useScore","upScore","mined","nearMineNum","j","Math","random","initialBoard","event","ary","length","push","copy","idx","slice","count","recursiveCall","setTimeout","alert","window","location","reload","Board","modalOpen","useEffect","Timer","prop","milisecond","time","setTime","timerID","useRef","current","setInterval","c","clearInterval","useTimer","clearTimer","Modal","setAppElement","ResultModal","modalIsOpen","setModalOpen","console","log","isOpen","onRequestClose","SetGame","setHEIGHT","setWIDTH","setMINE_PERCENT","type","placeholder","onChange","target","max","readOnly","onChnage","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d810d43.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Panel (props) {\n    const { low, col, under, setMark, mark } = props;\n    const showContent = () => {\n        let content;\n        switch(mark[low][col]) {\n            case \"notting\":\n                content=<div className={'NotClick'}></div>;\n                break;\n            case \"clicked\":\n                content=under[low][col];\n                if (content === 0)\n                    content = <div className={'Zero'}></div>;\n                break;\n            case \"contextMenued\":\n                content=\"🚩\";\n                break;\n            default:\n                break;\n        }\n        return content;\n    }\n\n    const clickHandler = (e) => {\n        e.preventDefault();\n        setMark(low, col, \"clicked\");\n    }\n\n    const contextmenuHandler = (e) => {\n        e.preventDefault();\n        setMark(low, col, \"contextMenued\");\n    }\n\n    return  <>\n                <td onClick={clickHandler} onContextMenu={contextmenuHandler}>\n                    {showContent()}\n                </td>\n            </>;\n}\n\nexport default Panel;","import React from \"react\";\nimport Panel from \"./Panel\";\n\nfunction Table(props) {\n    const { under, setMark, mark, HEIGHT, WIDTH } = props;\n\n    const trIdx = [];\n    for (let i = 0; i < HEIGHT; i++) {\n        trIdx[i] = i;\n    }\n\n    const tdIdx = [];\n    for (let i = 0; i < WIDTH; i++) {\n        tdIdx[i] = i;\n    }\n    \n    const trs = trIdx.map((low) => \n        <tr key={low}>\n            {tdIdx.map((col) => \n                <Panel className=\"Panel\" key={col} low={low} col={col} under={under} setMark={setMark} mark={mark}/>       \n            )}\n        </tr>);\n\n    return (\n        <>\n            <table>\n                <tbody>\n                    {trs}\n                </tbody>\n            </table>\n        </>);\n}\n\nexport default Table;","import { useState } from \"react\";\n\nconst initialBoard = (HEIGHT, WIDTH, MINE_PERCENT) => {\n    const mined = Array(HEIGHT).fill(null).map(() => (Array(WIDTH).fill(false)));\n    const nearMineNum = Array(HEIGHT).fill(null).map(() => (Array(WIDTH).fill(0)));\n    \n    for (let i = 0 ; i < HEIGHT; i++) {\n        for (let j = 0 ; j < WIDTH ; j++) {\n            mined[i][j] = Math.random() < MINE_PERCENT;\n            if (mined[i][j]) {\n                // 상\n                if (i > 0)\n                    nearMineNum[i-1][j]++;\n                // 하\n                if (i < HEIGHT - 1)\n                    nearMineNum[i+1][j]++;\n                // 좌\n                if (j > 0)\n                    nearMineNum[i][j-1]++;\n                // 우\n                if (j < WIDTH - 1)\n                    nearMineNum[i][j+1]++;\n                // 북서\n                if (i > 0 && j > 0)\n                    nearMineNum[i-1][j-1]++;\n                // 북동\n                if (i > 0 && j < WIDTH - 1)\n                    nearMineNum[i-1][j+1]++;\n                // 남서\n                if (i < HEIGHT - 1 && j > 0)\n                    nearMineNum[i+1][j-1]++;\n                // 남동\n                if (i < HEIGHT - 1 && j < WIDTH - 1)\n                    nearMineNum[i+1][j+1]++;\n            }\n        }\n    }\n\n    \n    for (let i = 0 ; i < HEIGHT; i++) {\n        for (let j = 0 ; j < WIDTH; j++) {\n            if (mined[i][j])\n                nearMineNum[i][j] = \"💣\";\n        }\n    }\n\n    return nearMineNum;\n}\n\nconst useScore = (initValue) => {\n    const [score, setScore] = useState(initValue);\n    const upScore = (value) => {\n        setScore(score + value);\n    }\n    return [score, upScore];\n}\n\nconst useMark = (HEIGHT, WIDTH, MINE_PERCENT) => {\n    const [ mark, setMarking ] = useState(Array(HEIGHT).fill(null).map(() => Array(WIDTH).fill(\"notting\")));\n    const [ score, upScore ] = useScore(0);\n    const [ under ] = useState(initialBoard(HEIGHT, WIDTH, MINE_PERCENT));\n    const setMark = (low, col, event) => {      \n        const ary = [];\n        for (let i = 0 ; i < mark.length; i++) {\n            ary.push(i);\n        }\n        const copy = ary.map((idx) => mark[idx].slice(0));\n        \n\n        if (event === \"clicked\") {\n            let count = 0;\n            switch(mark[low][col]) {\n                case \"notting\":\n                    const recursiveCall = (low, col) => {\n                        if (under[low][col] === 0 && copy[low][col] === \"notting\") {\n                            copy[low][col] = \"clicked\";\n                            count++;\n                            if (low > 0) {\n                                if (col > 0) {\n                                    recursiveCall(low-1,col-1,copy);\n                                }\n                                if (col < WIDTH - 1) {\n                                    recursiveCall(low-1,col+1,copy);\n                                }\n                                recursiveCall(low-1, col,copy);\n                                \n                            }\n                            if (low < HEIGHT - 1) {\n                                if (col > 0) {\n                                    recursiveCall(low+1,col-1,copy);\n                                \n                                }\n                                if (col < WIDTH - 1) {\n                                    recursiveCall(low+1,col+1,copy);\n                                }\n                                recursiveCall(low+1, col,copy);   \n                            }\n                            if (col > 0) {\n                                recursiveCall(low,col-1,copy);\n                            }\n                            if (col < WIDTH - 1) {\n                                recursiveCall(low,col+1,copy);\n                            }\n                        }\n                        else if (under[low][col] !== 0 && copy[low][col] !== \"clicked\") {\n                            copy[low][col] = \"clicked\";\n                            count++;\n                        }\n                    }\n                    recursiveCall(low,col);\n                    if (under[low][col] === \"💣\")\n                        setTimeout(() => {\n                            alert(\"실패입니다. 게임을 재시작합니다.\");\n                            window.location.reload();\n                        }, 10);\n                    else {\n                        upScore(count);\n                    }\n                    break;\n                case \"clicked\":\n                    // do notting\n                    break;\n                case \"contextMenued\":\n                    // do notting\n                    break;\n                default:\n                    break;\n            }\n        }\n        else if (event === \"contextMenued\") {\n            switch(mark[low][col]) {\n                case \"notting\":\n                    copy[low][col] = \"contextMenued\";\n                    if (under[low][col] === \"💣\")\n                        upScore(1);\n                    break;\n                case \"clicked\":\n                    // do notting\n                    break;\n                case \"contextMenued\":\n                    copy[low][col] = \"notting\";\n                    if (under[low][col] === \"💣\")\n                        upScore(-1);\n                    break;\n                default:\n                    break;\n            }         \n        }\n        setMarking(copy);\n    };\n    return [ mark, score, under, setMark ];\n}\n\nexport { useScore, useMark };","import React, { useEffect } from \"react\";\nimport Table from \"../Table\";\nimport { useMark } from \"./BoardHook\";\n\nfunction Board (props) {\n    const { HEIGHT, WIDTH, MINE_PERCENT, modalOpen } = props;\n    const [mark, score, under, setMark] = useMark(HEIGHT, WIDTH, MINE_PERCENT);\n\n    useEffect(() => {\n        if (HEIGHT * WIDTH === score)\n            modalOpen();\n    }, [score, HEIGHT, WIDTH, modalOpen]);\n\n    return (\n        <>\n            <div className={'Board'}>\n                <Table under={under} setMark={setMark} mark={mark} HEIGHT={HEIGHT} WIDTH={WIDTH}/>\n            </div>\n        </>\n    );\n}\n\nexport default Board;","import React, { useRef, useEffect, useState, Fragment } from \"react\";\n\n// useTimer \nconst useTimer = (milisecond) => {\n    const [time, setTime] = useState(0);\n    const timerID = useRef(0);\n    useEffect(() => {\n        timerID.current = setInterval(() => {\n            setTime(c => c+1);\n        }, milisecond);\n        return () => {\n            clearInterval(timerID.current);\n        }\n    }, [milisecond]);\n    const clearTimer = () => {\n        clearInterval(timerID.current);\n    }\n    return [ time, clearTimer ];\n}\n\n\nfunction Timer (prop) {\n    const [ time, clearTimer ] = useTimer(1000);\n    prop.time.current = time;\n    prop.clearTimer.current = clearTimer;\n    return (\n        <Fragment >    \n            <h1 className={'Timer'}> Time : {time} </h1>\n        </Fragment>\n    );\n}\n\nexport default Timer;","import React from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement('#root');\n\nfunction ResultModal(props) {\n    const { time, modalIsOpen, setModalOpen} = props;\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    console.log(modalIsOpen);\n    return (\n        <Modal className={'Modal'} isOpen={modalIsOpen}\n               onRequestClose={closeModal}>\n            <p> 축하합니다. {time}초 걸렸습니다. </p>\n            <button onClick={() => window.location.reload()}>재시작</button>\n        </Modal>\n    );\n}\n\nexport default ResultModal;","import React from \"react\";\n\nfunction SetGame (props) {\n    const { setHEIGHT, setWIDTH, setMINE_PERCENT } = props;\n    const HEIGHTChange = (e) => {\n        setHEIGHT(e.target.value);\n    }\n    const WIDTHChange = (e) => {\n        setWIDTH(e.target.value);\n    }\n    const MINE_PERCENTChange = (e) => {\n        setMINE_PERCENT(e.target.value);\n    }\n    return (\n    <div className={'SetGame'}>\n        <label>세로<input type=\"number\" placeholder=\"10\" onChange={HEIGHTChange} max=\"15\" readOnly></input></label>\n        <label>가로<input type=\"number\" placeholder=\"10\" onChange={WIDTHChange} max=\"15\" readOnly></input></label>\n        <label>지뢰 발생률<input type=\"number\" placeholder=\"0.1\" onChnage={MINE_PERCENTChange} max=\"1\" readOnly></input></label>\n    </div>);    \n}\n\nexport default SetGame;","import React, { useRef, useState } from 'react';\nimport Board from './components/Board/Board';\nimport Timer from \"./components/Timer\";\nimport ResultModal from './components/ResultModal';\nimport SetGame from \"./components/SetGame\";\n\nfunction App() {\n\n  // get time.\n  const time = useRef(null);\n  const clearTimer = useRef(null);\n\n  // 초기 setting\n  const [ HEIGHT, setHEIGHT ] =useState(10);\n  const [ WIDTH, setWIDTH ] = useState(10);\n  const [ MINE_PERCENT, setMINE_PERCENT ] = useState(0.1);\n\n  // modal logic.\n  const [modalIsOpen, setModalOpen] = useState(false);\n  const modalOpen = () => {\n    setModalOpen(true);\n    clearTimer.current();\n  }\n\n  return (\n    <div className=\"App\">\n      <Timer time={time} clearTimer={clearTimer}/>\n      <Board modalOpen={modalOpen} HEIGHT={HEIGHT} WIDTH={WIDTH} MINE_PERCENT={MINE_PERCENT}/>\n      <SetGame setHEIGHT={setHEIGHT} setWIDTH={setWIDTH} setMINE_PERCENT={setMINE_PERCENT} />\n      <ResultModal time={time.current} modalIsOpen={modalIsOpen} setModalOpen={setModalOpen} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}